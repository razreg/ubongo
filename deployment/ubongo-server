#!/bin/sh

# usage: sh ubongo-server.sh <start|stop>

# Find the script directory DIR
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

SERVICE_NAME=UbongoServer
LOG_DIR="$DIR"/../logs
CONF_PATH="$DIR"/../config/ubongo-config.xml
UNITS_PATH="$DIR"/../units
QUERIES_PATH="$DIR"/../db/queries.properties
LOG_CONFIG="$DIR"/../config/log4j2.xml
PATH_TO_JAR="$DIR"/../ubongo-server.jar
PID_PATH_NAME="$DIR"/../ubongo-server-pid

case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            echo "Using PATH_TO_JAR = $PATH_TO_JAR"
            echo "Using LOG_DIR = $LOG_DIR"
            echo "Using CONF_PATH = $CONF_PATH"
            echo "Using UNITS_PATH = $UNITS_PATH"
            echo "Using QUERIES_PATH = $QUERIES_PATH"
            echo "Using LOG_CONFIG = $LOG_CONFIG"
            nohup java -Dlog_directory=$LOG_DIR -Dconfig=$CONF_PATH -Dunits_path=$UNITS_PATH -Dqueries=$QUERIES_PATH \
            -Dlog4j.configurationFile=$LOG_CONFIG -jar $PATH_TO_JAR /tmp 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is already running ..."
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stoping ..."
            kill $PID;
            echo "$SERVICE_NAME stopped ..."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
esac